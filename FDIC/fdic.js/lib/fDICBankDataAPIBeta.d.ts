/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClient, ServiceClientOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from "./models";

/**
 * FDICBankDataAPIBetaOptions for FDICBankDataAPIBeta.
 */
declare interface FDICBankDataAPIBetaOptions extends ServiceClientOptions {
  /**
   * @property {enum} [format] - The format of the data to return. Possible values include: 'json', 'csv'
   */
  format?: string;
  /**
   * @property {enum} [download] - Whether the data should be downloaded as a file. Possible values include: 'false', 'true'
   */
  download?: string;
  /**
   * @property {string} [filename] - The filename to use when downloading data.
   */
  filename?: string;
}

export default class FDICBankDataAPIBeta extends ServiceClient {
  /**
   * @class
   * Initializes a new instance of the FDICBankDataAPIBeta class.
   * @constructor
   *
   * @param {string} [baseUri] - The base URI of the service.
   *
   * @param {object} [options] - The parameter options
   *
   * @param {Array} [options.filters] - Filters to be added to the request pipeline
   *
   * @param {object} [options.requestOptions] - Options for the underlying request object
   * {@link https://github.com/request/request#requestoptions-callback Options doc}
   *
   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
   *
   * @param {enum} [options.format] - The format of the data to return. Possible values include: 'json', 'csv'
   *
   * @param {enum} [options.download] - Whether the data should be downloaded as a file. Possible values include: 'false', 'true'
   *
   * @param {string} [options.filename] - The filename to use when downloading data.
   *
   */
  constructor(baseUri?: string, options?: FDICBankDataAPIBetaOptions);

  format: string;

  download: string;

  filename: string;


  /**
   * @summary Get Financial Institutions
   *
   * Returns a list of financial institutions.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filters] The filter for the bank search.
   * Examples:
   * * Filter by State name
   * `STNAME:"West Virginia"`
   * * Filter for any one of multiple State names
   * `STNAME:("West Virginia","Delaware")`
   * * Filter by last updated within an inclusive date range
   * `DATEUPDT:["2010-01-01" TO "2010-12-31"]`
   * * Filter for deposits over 50,000,000 (50000 thousands of dollars)
   * `DEP:[50000 TO *]`
   *
   *
   * @param {string} [options.search] Flexible text search against institution
   * records - currently only supporting name search.
   * Search supports text search and fuzzy matching, as opposed to filters that
   * are exact matches.
   * Examples:
   * * Search by name
   * `NAME: Island`
   * * Search by name (fuzzy match)
   * `NAME: Iland`
   *
   *
   * @param {string} [options.fields] Comma delimited list of fields to search.
   *
   * @param {string} [options.sortBy] Field name by which to sort returned data
   *
   * @param {string} [options.sortOrder] Indicator if ascending (ASC) or
   * descending (DESC)
   *
   * @param {number} [options.limit] The number of records to return. Default is
   * 10 and maximum is 10,000.
   *
   * @param {number} [options.offset] The offset of page to return.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Pathsen61rzinstitutionsgetresponses200contentapplicationJsonschema>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  searchInstitutionsWithHttpOperationResponse(options?: { filters? : string, search? : string, fields? : string, sortBy? : string, sortOrder? : string, limit? : number, offset? : number, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Pathsen61rzinstitutionsgetresponses200contentapplicationJsonschema>>;

  /**
   * @summary Get Financial Institutions
   *
   * Returns a list of financial institutions.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filters] The filter for the bank search.
   * Examples:
   * * Filter by State name
   * `STNAME:"West Virginia"`
   * * Filter for any one of multiple State names
   * `STNAME:("West Virginia","Delaware")`
   * * Filter by last updated within an inclusive date range
   * `DATEUPDT:["2010-01-01" TO "2010-12-31"]`
   * * Filter for deposits over 50,000,000 (50000 thousands of dollars)
   * `DEP:[50000 TO *]`
   *
   *
   * @param {string} [options.search] Flexible text search against institution
   * records - currently only supporting name search.
   * Search supports text search and fuzzy matching, as opposed to filters that
   * are exact matches.
   * Examples:
   * * Search by name
   * `NAME: Island`
   * * Search by name (fuzzy match)
   * `NAME: Iland`
   *
   *
   * @param {string} [options.fields] Comma delimited list of fields to search.
   *
   * @param {string} [options.sortBy] Field name by which to sort returned data
   *
   * @param {string} [options.sortOrder] Indicator if ascending (ASC) or
   * descending (DESC)
   *
   * @param {number} [options.limit] The number of records to return. Default is
   * 10 and maximum is 10,000.
   *
   * @param {number} [options.offset] The offset of page to return.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Pathsen61rzinstitutionsgetresponses200contentapplicationJsonschema} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Pathsen61rzinstitutionsgetresponses200contentapplicationJsonschema} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link
   *                      Pathsen61rzinstitutionsgetresponses200contentapplicationJsonschema}
   *                      for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  searchInstitutions(options?: { filters? : string, search? : string, fields? : string, sortBy? : string, sortOrder? : string, limit? : number, offset? : number, customHeaders? : { [headerName: string]: string; } }): Promise<models.Pathsen61rzinstitutionsgetresponses200contentapplicationJsonschema>;
  searchInstitutions(callback: ServiceCallback<models.Pathsen61rzinstitutionsgetresponses200contentapplicationJsonschema>): void;
  searchInstitutions(options: { filters? : string, search? : string, fields? : string, sortBy? : string, sortOrder? : string, limit? : number, offset? : number, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Pathsen61rzinstitutionsgetresponses200contentapplicationJsonschema>): void;


  /**
   * @summary Get Institution Locations
   *
   * Returns locations/branches of financial institutions.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filters] The filter for the location search.
   *
   * @param {string} [options.fields] Comma delimited list of fields to return.
   *
   * @param {string} [options.sortBy] Field name by which to sort returned data
   *
   * @param {string} [options.sortOrder] Indicator if ascending (ASC) or
   * descending (DESC)
   *
   * @param {number} [options.limit] The number of records to return. Default is
   * 10 and maximum is 10,000.
   *
   * @param {number} [options.offset] The offset of page to return.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Pathsl90g6vlocationsgetresponses200contentapplicationJsonschema>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  searchLocationsWithHttpOperationResponse(options?: { filters? : string, fields? : string, sortBy? : string, sortOrder? : string, limit? : number, offset? : number, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Pathsl90g6vlocationsgetresponses200contentapplicationJsonschema>>;

  /**
   * @summary Get Institution Locations
   *
   * Returns locations/branches of financial institutions.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filters] The filter for the location search.
   *
   * @param {string} [options.fields] Comma delimited list of fields to return.
   *
   * @param {string} [options.sortBy] Field name by which to sort returned data
   *
   * @param {string} [options.sortOrder] Indicator if ascending (ASC) or
   * descending (DESC)
   *
   * @param {number} [options.limit] The number of records to return. Default is
   * 10 and maximum is 10,000.
   *
   * @param {number} [options.offset] The offset of page to return.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Pathsl90g6vlocationsgetresponses200contentapplicationJsonschema} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Pathsl90g6vlocationsgetresponses200contentapplicationJsonschema} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link
   *                      Pathsl90g6vlocationsgetresponses200contentapplicationJsonschema}
   *                      for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  searchLocations(options?: { filters? : string, fields? : string, sortBy? : string, sortOrder? : string, limit? : number, offset? : number, customHeaders? : { [headerName: string]: string; } }): Promise<models.Pathsl90g6vlocationsgetresponses200contentapplicationJsonschema>;
  searchLocations(callback: ServiceCallback<models.Pathsl90g6vlocationsgetresponses200contentapplicationJsonschema>): void;
  searchLocations(options: { filters? : string, fields? : string, sortBy? : string, sortOrder? : string, limit? : number, offset? : number, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Pathsl90g6vlocationsgetresponses200contentapplicationJsonschema>): void;


  /**
   * @summary Get Historical Aggregate Data by Year
   *
   * Returns aggregate financial and structure data, subtotaled by year,
   * regarding finanical institutions.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filters] The filter criteria that refines the
   * records included in the calculated result.
   * example: >-
   * STNAME:"Alabama" AND YEAR:2005
   * Examples:
   * * Filter by Community Banks (CB) vs. Savings Institutions (SI)
   * `CB_SI:CB`
   * * Filter by State name
   * `STNAME:"Virginia"`
   * * Filter for any one of multiple State names
   * `STNAME:("West Virginia","Delaware")`
   * * Filter data by the year range
   * `YEAR:["2015" TO "2017"]`
   *
   *
   * @param {string} [options.fields] Comma delimited list of fields with
   * aggregated annual financial data to return.
   *
   * @param {string} [options.sortBy] Field name by which to sort returned data
   *
   * @param {string} [options.sortOrder] Indicator if ascending (ASC) or
   * descending (DESC)
   *
   * @param {number} [options.limit] The number of records to return. Default is
   * 10 and maximum is 10,000.
   *
   * @param {number} [options.offset] The offset of page to return.
   *
   * @param {string} [options.aggBy] The field(s) by which data will be
   * aggregated. Valid values are 'YEAR' or 'YEAR,STNAME'.
   *
   * @param {string} [options.aggTermFields] The field(s) for which aggregations
   * will be counted for each unique term.
   *
   * @param {string} [options.aggSumFields] The field(s) for which aggregations
   * will be summed or aggregated.
   *
   * @param {number} [options.aggLimit] The limit on how many aggregated results
   * will be displayed
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Paths7h3qd6summarygetresponses200contentapplicationJsonschema>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getHistoricalWithHttpOperationResponse(options?: { filters? : string, fields? : string, sortBy? : string, sortOrder? : string, limit? : number, offset? : number, aggBy? : string, aggTermFields? : string, aggSumFields? : string, aggLimit? : number, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Paths7h3qd6summarygetresponses200contentapplicationJsonschema>>;

  /**
   * @summary Get Historical Aggregate Data by Year
   *
   * Returns aggregate financial and structure data, subtotaled by year,
   * regarding finanical institutions.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filters] The filter criteria that refines the
   * records included in the calculated result.
   * example: >-
   * STNAME:"Alabama" AND YEAR:2005
   * Examples:
   * * Filter by Community Banks (CB) vs. Savings Institutions (SI)
   * `CB_SI:CB`
   * * Filter by State name
   * `STNAME:"Virginia"`
   * * Filter for any one of multiple State names
   * `STNAME:("West Virginia","Delaware")`
   * * Filter data by the year range
   * `YEAR:["2015" TO "2017"]`
   *
   *
   * @param {string} [options.fields] Comma delimited list of fields with
   * aggregated annual financial data to return.
   *
   * @param {string} [options.sortBy] Field name by which to sort returned data
   *
   * @param {string} [options.sortOrder] Indicator if ascending (ASC) or
   * descending (DESC)
   *
   * @param {number} [options.limit] The number of records to return. Default is
   * 10 and maximum is 10,000.
   *
   * @param {number} [options.offset] The offset of page to return.
   *
   * @param {string} [options.aggBy] The field(s) by which data will be
   * aggregated. Valid values are 'YEAR' or 'YEAR,STNAME'.
   *
   * @param {string} [options.aggTermFields] The field(s) for which aggregations
   * will be counted for each unique term.
   *
   * @param {string} [options.aggSumFields] The field(s) for which aggregations
   * will be summed or aggregated.
   *
   * @param {number} [options.aggLimit] The limit on how many aggregated results
   * will be displayed
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Paths7h3qd6summarygetresponses200contentapplicationJsonschema} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Paths7h3qd6summarygetresponses200contentapplicationJsonschema} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link
   *                      Paths7h3qd6summarygetresponses200contentapplicationJsonschema}
   *                      for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getHistorical(options?: { filters? : string, fields? : string, sortBy? : string, sortOrder? : string, limit? : number, offset? : number, aggBy? : string, aggTermFields? : string, aggSumFields? : string, aggLimit? : number, customHeaders? : { [headerName: string]: string; } }): Promise<models.Paths7h3qd6summarygetresponses200contentapplicationJsonschema>;
  getHistorical(callback: ServiceCallback<models.Paths7h3qd6summarygetresponses200contentapplicationJsonschema>): void;
  getHistorical(options: { filters? : string, fields? : string, sortBy? : string, sortOrder? : string, limit? : number, offset? : number, aggBy? : string, aggTermFields? : string, aggSumFields? : string, aggLimit? : number, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Paths7h3qd6summarygetresponses200contentapplicationJsonschema>): void;


  /**
   * @summary Get detail on historical bank failures from 1934 to present.
   *
   * Returns details on failed financial institutions.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filters] The filter criteria that refines the
   * records returned.
   * Examples:
   * * Filter by Location
   * `CITYST:"MEMPHIS, TN"`
   * * Filter by institution fail year range
   * `FAILYR:["2015" TO "2016"]`
   *
   *
   * @param {string} [options.fields] Comma delimited list of fields of failed
   * financial institutions to return.
   *
   * @param {string} [options.sortBy] Field name by which to sort returned data
   *
   * @param {string} [options.sortOrder] Indicator if ascending (ASC) or
   * descending (DESC)
   *
   * @param {number} [options.limit] The number of records to return. Default is
   * 10 and maximum is 10,000.
   *
   * @param {number} [options.offset] The offset of page to return.
   *
   * @param {string} [options.totalFields] Fields to sum up (in a totals response
   * object). Only numeric columns are valid.
   *
   * @param {string} [options.subtotalBy] The field by which data will be
   * subtotaled (in totals response object). Only categorical values should be
   * used.
   *
   * @param {string} [options.aggBy] The field(s) by which data will be
   * aggregated. Valid values are 'FAILYR' or 'FAILYR,PSTALP'.
   *
   * @param {string} [options.aggTermFields] The field(s) for which aggregations
   * will be counted for each unique term.
   *
   * @param {string} [options.aggSumFields] The field(s) for which aggregations
   * will be summed or aggregated.
   *
   * @param {number} [options.aggLimit] The limit on how many aggregated results
   * will be displayed
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Paths1lzmfz0failuresgetresponses200contentapplicationJsonschema>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  getFailuresWithHttpOperationResponse(options?: { filters? : string, fields? : string, sortBy? : string, sortOrder? : string, limit? : number, offset? : number, totalFields? : string, subtotalBy? : string, aggBy? : string, aggTermFields? : string, aggSumFields? : string, aggLimit? : number, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Paths1lzmfz0failuresgetresponses200contentapplicationJsonschema>>;

  /**
   * @summary Get detail on historical bank failures from 1934 to present.
   *
   * Returns details on failed financial institutions.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {string} [options.filters] The filter criteria that refines the
   * records returned.
   * Examples:
   * * Filter by Location
   * `CITYST:"MEMPHIS, TN"`
   * * Filter by institution fail year range
   * `FAILYR:["2015" TO "2016"]`
   *
   *
   * @param {string} [options.fields] Comma delimited list of fields of failed
   * financial institutions to return.
   *
   * @param {string} [options.sortBy] Field name by which to sort returned data
   *
   * @param {string} [options.sortOrder] Indicator if ascending (ASC) or
   * descending (DESC)
   *
   * @param {number} [options.limit] The number of records to return. Default is
   * 10 and maximum is 10,000.
   *
   * @param {number} [options.offset] The offset of page to return.
   *
   * @param {string} [options.totalFields] Fields to sum up (in a totals response
   * object). Only numeric columns are valid.
   *
   * @param {string} [options.subtotalBy] The field by which data will be
   * subtotaled (in totals response object). Only categorical values should be
   * used.
   *
   * @param {string} [options.aggBy] The field(s) by which data will be
   * aggregated. Valid values are 'FAILYR' or 'FAILYR,PSTALP'.
   *
   * @param {string} [options.aggTermFields] The field(s) for which aggregations
   * will be counted for each unique term.
   *
   * @param {string} [options.aggSumFields] The field(s) for which aggregations
   * will be summed or aggregated.
   *
   * @param {number} [options.aggLimit] The limit on how many aggregated results
   * will be displayed
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Paths1lzmfz0failuresgetresponses200contentapplicationJsonschema} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Paths1lzmfz0failuresgetresponses200contentapplicationJsonschema} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link
   *                      Paths1lzmfz0failuresgetresponses200contentapplicationJsonschema}
   *                      for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  getFailures(options?: { filters? : string, fields? : string, sortBy? : string, sortOrder? : string, limit? : number, offset? : number, totalFields? : string, subtotalBy? : string, aggBy? : string, aggTermFields? : string, aggSumFields? : string, aggLimit? : number, customHeaders? : { [headerName: string]: string; } }): Promise<models.Paths1lzmfz0failuresgetresponses200contentapplicationJsonschema>;
  getFailures(callback: ServiceCallback<models.Paths1lzmfz0failuresgetresponses200contentapplicationJsonschema>): void;
  getFailures(options: { filters? : string, fields? : string, sortBy? : string, sortOrder? : string, limit? : number, offset? : number, totalFields? : string, subtotalBy? : string, aggBy? : string, aggTermFields? : string, aggSumFields? : string, aggLimit? : number, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Paths1lzmfz0failuresgetresponses200contentapplicationJsonschema>): void;
}

export { FDICBankDataAPIBeta, models as FDICBankDataAPIBetaModels };
